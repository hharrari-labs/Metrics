<?php

namespace Basicperf\MetricsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FrontendRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FrontendRepository extends EntityRepository
{
	public function loadtime($data){

	}

	public function findByPagetype($pagetype){

		$qb = $this->_em->createQueryBuilder();
				$qb->select('f.date, f.loadtime')
				   ->from('BasicperfMetricsBundle:Frontend', 'f')
				   ->where('f.pagetype = :pagetype')
				   ->setParameter('pagetype', $pagetype)
				   ->orderBy('f.date', 'ASC');

		return $qb->getQuery()->getResult();
	}

	public function findByNametype($pagetype){

		$qb = $this->_em->createQueryBuilder();
				$qb->select('f.date, f.loadtime, f.pagetype')
				   ->from('BasicperfMetricsBundle:Frontend', 'f')
				   ->where($qb->expr()->like('f.pagetype', ':pagetype'))
				   ->setParameter('pagetype','%' .$pagetype.'%')
				   ->orderBy('f.pagetype ASC, f.date');

		return $qb->getQuery()->getResult();
	}

	public function findBytype($pagetype){

		$qb = $this->_em->createQueryBuilder();
				$qb->select('DISTINCT f.pagetype')
				   ->from('BasicperfMetricsBundle:Frontend', 'f')
				   ->where($qb->expr()->like('f.pagetype', ':pagetype'))
				   ->setParameter('pagetype','%' .$pagetype.'%')
				   ->orderBy('f.pagetype', 'ASC');

		return $qb = json_encode(array_map('current', $qb->getQuery()->getArrayResult()));
	}
}


















// {#
// 	**************************************************************

// 		Chart with points Metrics Basilic

// 	**************************************************************
// #}	

// {% for item in metrics %}	
// 	{% if item.pagetype not in newArray %}		
// 		{% set newArray = newArray|merge([item.pagetype]) %}
// 	{% endif %}	
// {% endfor %}

// {% for type_name in type %}
// 	{% for item in newArray|sort %}
// 		{% if type[b] in item %}
// 			{% set content_type = content_type|merge([item]) %}
// 		{% endif %}	
// 	{% endfor %}
// 	<div class="box">
// 		<div class="box-header">
// 			<h2><i class="halflings-icon list-alt"></i><span class="break"></span>Chart {{ type[b] }}</h2>
// 			<div class="box-icon">
// 				<a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
// 				<a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
// 				<a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
// 			</div>
// 		</div>
// 		<div class="box-content">
// 			<div id="chart-metrics-front-{{ type[b] }}" style="height: 400px"></div>
// 		</div>
// 	</div>
// 	{% set b = b + 1 %}
// {% endfor %}
// {% set newArray = [] %}
// {% for item in metrics %}	
// 	{% if item.pagetype not in newArray %}		
// 		{% set newArray = newArray|merge([item.pagetype]) %}
// 	{% endif %}	
// {% endfor %}

// {% for type_name in newArray|sort %}
// 	[{{type_name}}]
// 	{% for item in metrics %}		
// 		{% if type_name in item.pagetype %}
// 			[{{ item.date|date('U') }}000,{{ item.loadtime }}]{% if loop.last %}]{% else %},{% endif %}
// 		{% endif %}	
// 	{% endfor %}	 
// {% endfor %}

